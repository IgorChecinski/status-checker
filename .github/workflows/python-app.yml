name: Python CI/CD with Docker

# Define trigger
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest  

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Python (in this case, 3.11)
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    # Set env vars for test
    - name: Set env vars for test
      run: |
        echo "DATABASE_URL=sqlite:///./test.db" >> $GITHUB_ENV
        echo "REDIS_HOST=localhost" >> $GITHUB_ENV
        echo "REDIS_PORT=6379" >> $GITHUB_ENV


    #Run tests
    - name: Run tests with pytest
      run: |
        pytest

    # Build Docker image
    - name: Build Docker image
      run: |
        docker build -t url-monitor .

    # Run Docker container and test
    - name: Run Docker container
      run: |
        docker run -d -p 8000:8000 url-monitor
        for i in {1..15}; do
          echo "Waiting for the app to be ready... ($i)"
          curl --fail http://localhost:8000 && break || sleep 2
        done

    # Clean up Docker containers after the run
    - name: Clean up Docker containers
      run: |
        CONTAINERS=$(docker ps -q)
        if [ -n "$CONTAINERS" ]; then
          echo "Stopping containers..."
          docker stop $CONTAINERS
          docker rm $CONTAINERS
        else
          echo "No containers to stop."
        fi
